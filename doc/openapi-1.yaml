openapi: 3.0.0
info:
  title: w11 2
  version: 1.0.0
servers:
  - url: http://localhost:3000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: auth
  - name: admin
  - name: author
  - name: student
  - name: learning-path
paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: regist
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: author2
                password: '123456'
                email: johnz@example.com
                role: author
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/login:
    post:
      tags:
        - auth
      summary: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: adsz
                password: '123456'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/dashboard:
    get:
      tags:
        - admin
      summary: Get Dashboard Admin
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/listusers:
    get:
      tags:
        - admin
      summary: Get All User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/createUser:
    post:
      tags:
        - admin
      summary: Create User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: author3
                password: '123456'
                email: nasdr@eadsple.com
                role: author
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/updateUser/{id}:
    put:
      tags:
        - admin
      summary: Update User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: adsz
                email: das@esadsda.com
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/deleteuser/{id}:
    delete:
      tags:
        - admin
      summary: Delete User
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/assignRole/{id}:
    post:
      tags:
        - admin
      summary: Assign Role User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: 64ee9f7bb008417c70770263
                role: student
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/createcourse:
    post:
      tags:
        - admin
      summary: Create Course
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: dsaads
                thumbnail: adsdas
                description: dsadsa
                authorId: 6143a2308178fed73050e601
                creationDate: '2023-08-28T12:34:56.789Z'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/updatecourse/{id}:
    put:
      tags:
        - admin
      summary: Update Course
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: dsasad
                thumbnail: adsdsa
                description: adsdsa
                authorId: 6143a2308178fed73050e601
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/deletecourse/{id}:
    delete:
      tags:
        - admin
      summary: Delete Course
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/listcourses:
    get:
      tags:
        - admin
      summary: Get All Course
      security:
        - bearerAuth: []
      parameters:
        - name: searchTerm
          in: query
          schema:
            type: string
        - name: sortBy
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /author/dashboard:
    get:
      tags:
        - author
      summary: Get Dashboard Author
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /author/createcourse:
    post:
      tags:
        - author
      summary: Create Course
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: adsdsa
                thumbnail: ssaddasood
                description: dasdsa
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /author/listcourses:
    get:
      tags:
        - author
      summary: Get All Couse
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /author/listowncourses:
    get:
      tags:
        - author
      summary: Get Own Course
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /author/updateownedcourse/{id}:
    put:
      tags:
        - author
      summary: Update Own Course
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: dsasad
                thumbnail: adsdsa
                description: adsdsa
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /author/deleteownedcourse/{id}:
    delete:
      tags:
        - author
      summary: Delete Own Course
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /author/listenrollrequests:
    get:
      tags:
        - author
      summary: Get Enroll List Student
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /author/updateEnrollmentStatus/{requestId}:
    post:
      tags:
        - author
      summary: Update Status Enroll Student
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                status: accepted
      security:
        - bearerAuth: []
      parameters:
        - name: requestId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /author/updateprofile:
    put:
      tags:
        - author
      summary: Edit Profile Author
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: authoredit
                email: sdasa@gmail.com
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /student/dashboard:
    get:
      tags:
        - student
      summary: Get Dasboard Student
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /student/viewcourse:
    get:
      tags:
        - student
      summary: Get All Couse
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /student//sendEnrollRequest:
    post:
      tags:
        - student
      summary: Send Enroll Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                courseId: 64edbea701118d7d19a40301
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /student/readEnrolledCourseContent:
    get:
      tags:
        - student
      summary: Get Enroll Course
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /student/unenrollFromCourse:
    post:
      tags:
        - student
      summary: Unenroll from Course
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                courseId: 64edbea701118d7d19a40301
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /student/markCourseCompleted:
    post:
      tags:
        - student
      summary: Mark Course Complete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                courseId: 64edbea701118d7d19a40301
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /student//updateProfile:
    put:
      tags:
        - student
      summary: Update Profile Student
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: studentedit
                email: sdasa@gmail.com
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /student/addreview/{courseId}:
    post:
      tags:
        - student
      summary: Add Review Course
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                studentId: 61234abcde12345678901234
                rating: 4.5
                review: >-
                  This course was very informative and well-structured. Highly
                  recommend!
      security:
        - bearerAuth: []
      parameters:
        - name: courseId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /student/progress/{courseId}:
    get:
      tags:
        - student
      summary: Get Progress
      security:
        - bearerAuth: []
      parameters:
        - name: courseId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - student
      summary: Update Progress
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                completion: 10
      security:
        - bearerAuth: []
      parameters:
        - name: courseId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /learningPaths/list:
    get:
      tags:
        - learning-path
      summary: Get All Path
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /learningPaths/create:
    post:
      tags:
        - learning-path
      summary: Create Path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: Web Development Path
                description: A comprehensive guide to becoming a web developer.
                courses:
                  - 64edbea701118d7d19a40301
                  - 64ee2daf1dec6e75cb0814d4
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /learningPaths/update/{id}:
    put:
      tags:
        - learning-path
      summary: Edit Learning Path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: AAzzz
                description: An advanced guide for professional web developers.
                courses:
                  - 64ee3deea931f652d78b3d43
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /learningPaths/delete/{id}:
    delete:
      tags:
        - learning-path
      summary: Delete Learning Path
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /learningPaths/addcourse:
    post:
      tags:
        - learning-path
      summary: Add Course to Path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                pathId: 64ee9b49d86430bd37fdfffb
                courseId: 64edbea701118d7d19a40301
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}